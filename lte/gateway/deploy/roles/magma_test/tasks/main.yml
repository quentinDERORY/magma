---
- name: Set Python environment variable
  become: yes
  lineinfile:
    dest: /etc/environment
    state: present
    line: "{{ item }}"
  with_items:
    - S1AP_TESTER_ROOT={{ s1ap_tester_root }}
    - S1AP_TESTER_SRC={{ s1ap_tester_src }}
    - GATEWAY_NAME={{ gateway_name }}
    - GATEWAY_IP={{ gateway_ip }}
    - GATEWAY_PORT={{ gateway_port }}
    - M2_HOME={{ mvn_dir }}
    - SWAGGER_SPEC={{ swagger_spec }}
    - SWAGGER_CODEGEN_OUTPUT={{ swagger_codegen_output }}
    - CODEGEN_ROOT={{ codegen_root }}
  when: full_provision

- name: Set up S1AP tester build directory
  file: path={{ s1ap_tester_root }}/bin state=directory recurse=yes
  when: full_provision

- name: Set a convenience function for starting the S1AP tester
  lineinfile: >
    dest=/home/{{ ansible_user }}/.bashrc
    state=present
    line="alias s1aptester='mkdir -p /tmp/fw; cd $S1AP_TESTER_ROOT; venvsudo LD_LIBRARY_PATH=$S1AP_TESTER_ROOT/bin PATH=$PATH:/sbin bin/testCntrlr'"
  when: full_provision

- name: Add integ test scripts to path
  become: yes
  file:
    src: "{{ test_scripts }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
  with_items:
    - clone_s1_tester.sh
    - build_s1_tester.sh
  when: full_provision

- name: Clone s1aptester code
  shell: "{{ test_scripts }}/clone_s1_tester.sh"
  args:
    executable: /bin/bash
  environment:
    MAGMA_ROOT: "{{ magma_root }}"
    S1AP_TESTER_SRC: "{{ s1ap_tester_src }}"
    S1AP_TESTER_ROOT: "{{ s1ap_tester_root }}"
  when: full_provision

- name: Build s1aptester code
  shell: "{{ test_scripts }}/build_s1_tester.sh"
  args:
    executable: /bin/bash
  environment:
    MAGMA_ROOT: "{{ magma_root }}"
    S1AP_TESTER_SRC: "{{ s1ap_tester_src }}"
    S1AP_TESTER_ROOT: "{{ s1ap_tester_root }}"
  when: full_provision

# pip3 is busted on Debian Jessie so run in virtualenv.
# Don't preburn this because /tmp gets blown away
- name: Install pyparsing
  pip:
    name: pyparsing
    extra_args: --cache-dir ~/.pipcache
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
  register: pyparsing
  until: pyparsing is not failed
  when: full_provision
  retries: 5
  delay: 3
  ignore_errors: true

- name: Generate python types from C headers
  command: "/tmp/virtualenv/bin/python3.5 {{ test_scripts }}/c_parser.py"
  environment:
    S1AP_TESTER_ROOT: "{{ s1ap_tester_root }}"
  when: full_provision

- name: Install MySQL client for OAI upstreaming
  become: yes
  apt: pkg=default-libmysqlclient-dev state=present update_cache=yes
  when: preburn

- name: Check whether swagger.yml exists
  stat:
    path: "{{ swagger_spec }}"
  register: swagger_yml_present
  when: full_provision

#- name: Generate Python bindings for the REST API with swagger-codegen
#  no_log: True
#  command: "{{ test_scripts }}/generate_python_bindings.sh"
#  when: full_provision and (swagger_yml_present.stat.exists == true)

- name: Add the test controller DNS entry
  become: yes
  lineinfile:
    dest: /etc/hosts
    regexp: '.*controller.magma.test$'
    line: "10.0.2.2 controller.magma.test"
    state: present
  when: full_provision


- name: Change ownership of vagrant home
  become: yes
  command: chown -R vagrant /home/vagrant
  ignore_errors: yes

- name: Install setuptools
  pip:
    name: setuptools
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: setuptools
  until: setuptools is not failed
  retries: 7
  delay: 3
  become_user: vagrant

- name: Install wheel
  pip:
    name: wheel
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: wheel
  until: wheel is not failed
  retries: 7
  delay: 3
  become_user: vagrant

- name: Install pkg_resources
  pip:
    name: pkg_resources
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: pkg_resources
  until: pkg_resources is not failed
  retries: 7
  delay: 3
  become_user: vagrant

- name: Install pip
  pip:
    name: pip
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: pip
  until: pip is not failed
  retries: 7
  delay: 3
  become_user: vagrant

- name: Install grpcio
  pip:
    name: grpcio-tools
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: grpcio
  until: grpcio is not failed
  retries: 7
  delay: 3
  become_user: vagrant


- name: Install aioeventlet
  pip:
    name: aioeventlet
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: aioeventlet
  until: aioeventlet is not failed
  retries: 7
  delay: 3
  ignore_errors: true
  become_user: vagrant

- name: Install aioh2
  pip:
    name: git+https://github.com/URenko/aioh2.git
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: aioh2
  until: aioh2 is not failed
  retries: 7
  delay: 3
  ignore_errors: true
  become_user: vagrant

- name: Install mysqlclient
  pip:
    name: mysqlclient==1.3.12
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: mysqlclient
  until: mysqlclient is not failed
  retries: 7
  delay: 3
  ignore_errors: true
  become_user: vagrant

- name: Install ansible
  pip:
    name: ansible
    virtualenv_python: python3.5
    virtualenv: /tmp/virtualenv
    extra_args: --cache-dir /home/vagrant/magma/.cache/pip -U
  register: ansible
  until: ansible is not failed
  retries: 7
  delay: 3
  ignore_errors: true
  become_user: vagrant

- name: Setup coreutils
  apt:
    pkg: coreutils
    state: present
    update_cache: yes
  retries: 5
  ignore_errors: true



- name: populate /etc/environment
  lineinfile:
    path: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  become: true
  ignore_errors: true
  loop:
    - key: PIP_CACHE_HOME
      value: /home/vagrant/magma/.cache/pip
    - key: PIP_DEFAULT_TIMEOUT
      value: 200
    - key: PYTHONPATH
      value: $PYTHONPATH:/tmp/virtualenv/lib/python3.5/site-packages:/usr/lib/python3/dist-packages

- name: initialize virtual env
  command: virtualenv -v --system-site-packages --python=/usr/bin/python3.5 /home/vagrant/build/python
  ignore_errors: true
  register: virtual
  until: virtual is not failed
  retries: 9
  delay: 3

- name: populate virtual env activate
  lineinfile:
    path: "/home/vagrant/build/python/bin/activate"
    state: present
    line: "export {{ item.key }}={{ item.value}}"
  ignore_errors: true
  loop:
    - key: PYTHONPATH
      value: $PYTHONPATH:/tmp/virtualenv/lib/python3.5/site-packages:/usr/lib/python3/dist-packages


- name: Change ownership of vagrant home
  become: yes
  command: chown -R vagrant /home/vagrant
  ignore_errors: yes